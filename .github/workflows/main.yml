name: CI MLflow Training

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.5"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run preprocessing script
        run: |
          python preprocessing/preprocessing_pipeline.py

      - name: Run training script
        env:
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_ACCESS_TOKEN }}
        run: |
          python modelling/modelling_to_dags.py

      - name: Get latest run_id from DagsHub
        id: get_run
        env:
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_ACCESS_TOKEN }}
        run: |
          echo '
          from mlflow.tracking import MlflowClient

          client = MlflowClient(tracking_uri="https://dagshub.com/ksnugroho/mlops-dagshub-demo.mlflow")
          run = client.search_runs(["0"], order_by=["start_time DESC"])[0]
          print(f"RUN_ID={run.info.run_id}")
          ' > get_run.py
          RUN_ID=$(python get_run.py | grep RUN_ID | cut -d'=' -f2)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest Run ID: $RUN_ID"

      - name: Build Docker image
        run: |
          mlflow models build-docker \
            --model-uri "runs:/$RUN_ID/model" \
            --name credit-score-api

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag and Push to Docker Hub
        run: |
          docker tag credit-score-api ${{ secrets.DOCKER_HUB_USERNAME }}/credit-score-api:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/credit-score-api:latest

